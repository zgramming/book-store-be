// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CommonStatus {
  active
  inactive
}

enum TransactionStatus {
  loaned
  returned
}

// Main Modul Schema

model Inventory {
  id         Int      @id @default(autoincrement())
  book_id    Int      @db.Integer
  location   String   @db.VarChar(100)
  stock      Int      @db.Integer
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  book MasterBook @relation(fields: [book_id], references: [id])

  @@map("inventory")
}

model HistoryTransaction {
  id                 Int               @id @default(autoincrement())
  transaction_id     Int               @db.Integer
  book_id            Int               @db.Integer
  student_id         Int               @db.Integer
  qty                Int               @db.Integer
  status             TransactionStatus @default(returned)
  duration_loan_days Int               @db.Integer
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt

  student     MasterStudent @relation(fields: [student_id], references: [id])
  transaction Transaction   @relation(fields: [transaction_id], references: [id])
  book        MasterBook    @relation(fields: [book_id], references: [id])

  @@map("history_transaction")
}

model MasterBook {
  id         Int      @id @default(autoincrement())
  title      String   @db.VarChar(100)
  author     String   @db.VarChar(100)
  publisher  String   @db.VarChar(100)
  year       Int      @db.Integer
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  TransactionDetail  TransactionDetail[]
  HistoryTransaction HistoryTransaction[]
  Inventory          Inventory[]

  @@map("master_book")
}

model MasterStudent {
  id     Int          @id @default(autoincrement())
  name   String       @db.VarChar(100)
  nim    String       @unique @db.VarChar(50)
  status CommonStatus @default(active)

  Transaction        Transaction[]
  HistoryTransaction HistoryTransaction[]

  @@map("master_student")
}

model Transaction {
  id          Int               @id @default(autoincrement())
  student_id  Int               @db.Integer
  date_loan   DateTime
  date_return DateTime
  status      TransactionStatus @default(loaned)

  student MasterStudent @relation(fields: [student_id], references: [id])

  TransactionDetail  TransactionDetail[]
  HistoryTransaction HistoryTransaction[]

  @@map("transaction")
}

model TransactionDetail {
  id             Int               @id @default(autoincrement())
  transaction_id Int               @db.Integer
  book_id        Int               @db.Integer
  qty            Int               @db.Integer
  status         TransactionStatus @default(loaned)

  transaction Transaction @relation(fields: [transaction_id], references: [id])
  book        MasterBook  @relation(fields: [book_id], references: [id])

  @@map("transaction_detail")
}

// End Main Modul Schema
